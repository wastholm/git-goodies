#!/bin/sh -e

repo=$1
subdir=$2
prefix=$(basename "$subdir")

if [ -z "$repo" -o -z "$subdir" ]; then
    cat <<EOT
Usage: $0 REPO SUBDIR

Subsume another Git repo as a subdirectory of the current one.
EOT
    exit 1
fi

temp_dir=$(mktemp -d /tmp/git-subsume-XXXXXXXX)
trap 'rm -fr "$temp_dir"' 0 1 2 3 15

echo "$0: cloning: $repo"
git clone "$repo" "$temp_dir"
cd "$temp_dir"

echo "$0: moving into subdirectory: $subdir"
git filter-branch --index-filter \
    "
        git ls-files -s |
            sed 's!	\"*!&$subdir/!' |
                GIT_INDEX_FILE=\$GIT_INDEX_FILE.new git update-index --index-info &&
                (mv \"\$GIT_INDEX_FILE.new\" \"\$GIT_INDEX_FILE\" || echo >&2 \"\$0: warning: not found: \$GIT_INDEX_FILE\")
    " \
    --tag-name-filter cat -f -- --all

git tag | while read tag_name; do
    tag_hash=$(git rev-parse "${tag_name}^0")
    echo "$0: tag: $tag_hash $tag_name"
    git tag -a -m "Was '$tag_name'." "$prefix-$tag_name" "$tag_hash"
    git tag -d "$tag_name"
done

cd -

if [ -d "$subdir" ]; then
    echo "$0: deleting directory: $subdir"
    git rm "$subdir"
    git add -A
    git commit -m "Deleted '$subdir'."
fi

echo "$0: fetching: $temp_dir"
git fetch "$temp_dir" master:newbranch
git fetch "$temp_dir" --tags

echo "$0: merging"
git merge newbranch -m "Subsumed '$subdir' (from $repo)."
git branch -d newbranch
